generator client {
  provider = "prisma-client-js"
  output   = "./prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model config {
  id                             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  soil_sensor_update_interval_ms Int
  created_at                     DateTime     @default(now()) @db.Timestamp(6)
  controller                     controller[]
}

model controller {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @default("DEFAULT CONTROLLER NAME") @db.VarChar(255)
  ip_address String?   @db.VarChar(15)
  online     Boolean   @default(false)
  last_boot  DateTime? @db.Timestamp(6)
  config_id  String    @db.Uuid
  config     config    @relation(fields: [config_id], references: [id], onUpdate: NoAction)
  zone       zone[]
}

model sensor {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type           sensor_type
  zone_id        String           @db.Uuid
  zone           zone             @relation(fields: [zone_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sensor_reading sensor_reading[]
}

model sensor_reading {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sensor_id  String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  reading    Float
  sensor     sensor   @relation(fields: [sensor_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model solenoid {
  id           String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  zone_id      String                @db.Uuid
  open         Boolean               @default(false)
  control_mode solenoid_control_mode @default(auto)
  name         String                @default("DEFAULT") @db.VarChar(50)
  zone         zone                  @relation(fields: [zone_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model zone {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @default("DEFAULT ZONE NAME") @db.VarChar(50)
  controller_id  String?          @db.Uuid
  controller     controller?      @relation(fields: [controller_id], references: [id], onUpdate: NoAction)
  irrigation_job irrigation_job[]
  sensor         sensor[]
  solenoid       solenoid[]
}

model irrigation_job {
  id      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  zone_id String   @db.Uuid
  active  Boolean
  start   DateTime @db.Timestamp(6)
  end     DateTime @db.Timestamp(6)
  zone    zone     @relation(fields: [zone_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model pgmigrations {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  run_on DateTime @db.Timestamp(6)
}

enum sensor_type {
  moisture
}

enum solenoid_control_mode {
  auto
  physical
  client
}
