generator client {
  provider = "prisma-client-js"
  output   = "./prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model config {
  id                             String       @id @db.VarChar
  soil_sensor_update_interval_ms Int
  createdAt                      DateTime     @default(now()) @db.Timestamp(6)
  controller                     controller[]
}

model controller {
  id            String    @id @db.VarChar
  friendly_name String?   @db.VarChar
  ip_address    String?   @db.VarChar
  online        Boolean   @default(false)
  last_boot     DateTime? @db.Timestamp(6)
  config_id     String    @db.VarChar
  config        config    @relation(fields: [config_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  zone          zone[]
}

model sensor {
  id             String           @id @db.VarChar
  zone_id        String           @db.VarChar
  type           sensor_type
  zone           zone             @relation(fields: [zone_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sensor_reading sensor_reading[]
}

model sensor_reading {
  id        String   @id @db.VarChar
  sensor_id String   @db.VarChar
  createdAt DateTime @default(now()) @db.Timestamp(6)
  reading   Float
  sensor    sensor   @relation(fields: [sensor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model solenoid {
  id      String         @id @db.VarChar
  zone_id String         @db.VarChar
  state   solenoid_state @default(off)
  zone    zone           @relation(fields: [zone_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model zone {
  id             String           @id @db.VarChar
  zone_name      String?          @db.VarChar
  controller_id  String           @db.VarChar
  controller     controller       @relation(fields: [controller_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  irrigation_job irrigation_job[]
  sensor         sensor[]
  solenoid       solenoid[]
}

model irrigation_job {
  id      String   @id @db.VarChar
  zone_id String   @db.VarChar
  active  Boolean
  start   DateTime @db.Timestamp(6)
  end     DateTime @db.Timestamp(6)
  zone    zone     @relation(fields: [zone_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum sensor_type {
  moisture
}

enum solenoid_state {
  on
  off
  forced_on
  forced_off
}
